spring.application.name=service-exchange-cyw
server.port=6215
server.context-path=/ex_cyw
spring.session.store-type=none

#eureka
#eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/
## \u05E2\uFFFD\uFFFD\u02B1\u02B9\uFFFD\uFFFDip\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD
eureka.instance.prefer-ip-address=true


#kafka
#spring.kafka.bootstrap-servers=114.55.94.18:9092
spring.kafka.bootstrap-servers=172.31.50.56:9092
spring.kafka.consumer.group-id=default-group
spring.kafka.template.default-topic=test
spring.kafka.listener.concurrency=1
#spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE


#kafka.producer.servers=114.55.94.18:9092
kafka.producer.servers=172.31.50.56:9092
kafka.producer.retries=0
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960

spring.devtools.restart.enabled=true


#redis
spring.redis.host=172.31.50.33
spring.redis.password=ENC(SXuWnz79A4slMYdgrHNIwMLzSEameA/o)
spring.redis.port=6379
spring.redis.database=0

# mongodb
spring.data.mongodb.custom.hosts[0]=172.31.50.153
spring.data.mongodb.custom.ports[0]=27017
spring.data.mongodb.custom.hosts[1]=172.31.53.136
spring.data.mongodb.custom.ports[1]=27017
spring.data.mongodb.custom.hosts[2]=172.31.54.73
spring.data.mongodb.custom.ports[2]=27017
spring.data.mongodb.custom.username=admin
spring.data.mongodb.custom.password=ENC(vQXbBoggKEPild+PWGu7vIl1yRjexEzg)
spring.data.mongodb.custom.database=bitrade
spring.data.mongodb.custom.authentication-database=admin
spring.data.mongodb.custom.connections-per-host=50
spring.data.mongodb.custom.min-connections-per-host=5

#mybatis-plus配置枚举
mybatis-plus.type-enums-package=com.spark.bitrade.constant
mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumOrdinalTypeHandler
#mybatis-plus.global-config.db-config.id-type=auto

####### \u5206\u5e93\u914d\u7f6e #################
#\u6570\u636e\u6e90\u914d\u7f6e
sharding.jdbc.datasource.names=master0,slave0

#主库
#sharding.jdbc.datasource.master0.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master0.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
sharding.jdbc.datasource.master0.username=dk-ex-vip-api
sharding.jdbc.datasource.master0.password=ENC(5P+7op8aUVOyyDFKNvBJ1j2iCIfConDpeUbrNi9x1bM=)
sharding.jdbc.datasource.master0.initialSize=50
sharding.jdbc.datasource.master0.minIdle=10
sharding.jdbc.datasource.master0.maxActive=500
sharding.jdbc.datasource.master0.maxWait=60000
sharding.jdbc.datasource.master0.timeBetweenEvictionRunsMillis=60000
sharding.jdbc.datasource.master0.minEvictableIdleTimeMillis=300000
sharding.jdbc.datasource.master0.validationQuery=select 'x'
sharding.jdbc.datasource.master0.testWhileIdle=true
sharding.jdbc.datasource.master0.testOnBorrow=false
sharding.jdbc.datasource.master0.testOnReturn=false
sharding.jdbc.datasource.master0.poolPreparedStatements=true
sharding.jdbc.datasource.master0.maxPoolPreparedStatementPerConnectionSize=50
sharding.jdbc.datasource.master0.removeAbandoned=true
sharding.jdbc.datasource.master0.filters=stat,wall,slf4j

#从库
sharding.jdbc.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.slave0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.slave0.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
sharding.jdbc.datasource.slave0.username=dk-ex-vip-api
sharding.jdbc.datasource.slave0.password=ENC(5P+7op8aUVOyyDFKNvBJ1j2iCIfConDpeUbrNi9x1bM=)
sharding.jdbc.datasource.slave0.initialSize=50
sharding.jdbc.datasource.slave0.minIdle=10
sharding.jdbc.datasource.slave0.maxActive=500
sharding.jdbc.datasource.slave0.maxWait=60000
sharding.jdbc.datasource.slave0.timeBetweenEvictionRunsMillis=60000
sharding.jdbc.datasource.slave0.minEvictableIdleTimeMillis=300000
sharding.jdbc.datasource.slave0.validationQuery=select 'x'
sharding.jdbc.datasource.slave0.testWhileIdle=true
sharding.jdbc.datasource.slave0.testOnBorrow=false
sharding.jdbc.datasource.slave0.testOnReturn=false
sharding.jdbc.datasource.slave0.poolPreparedStatements=true
sharding.jdbc.datasource.slave0.maxPoolPreparedStatementPerConnectionSize=50
sharding.jdbc.datasource.slave0.removeAbandoned=true
sharding.jdbc.datasource.slave0.filters=stat,wall,slf4j

#读写分离
sharding.jdbc.config.sharding.master-slave-rules.ds0.load-balance-algorithm-type=round_robin
sharding.jdbc.config.sharding.master-slave-rules.ds0.master-data-source-name=master0
sharding.jdbc.config.sharding.master-slave-rules.ds0.slave-data-source-names=slave0

#数据库默认分库配置规则
sharding.jdbc.config.sharding.default-data-source-name=master0
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=member_id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=master0

#是否在启动时检查分表元数据一致性，默认值: false
sharding.jdbc.config.props.check.table.metadata.enabled=true
sharding.jdbc.config.sharding.props.sql.show=true

##表分片配置
#机器人账户WAL流水记录
sharding.jdbc.config.sharding.tables.cyw_wallet_wal_record.actual-data-nodes=ds0.cyw_wallet_wal_record_$->{0..7}
sharding.jdbc.config.sharding.tables.cyw_wallet_wal_record.table-strategy.standard.sharding-column=ref_id
sharding.jdbc.config.sharding.tables.cyw_wallet_wal_record.table-strategy.standard.precise-algorithm-class-name=\
  com.spark.bitrade.sharding.HashcodeShardingAlgorithm
####### \u5206\u5e93\u914d\u7f6e #################

####### 分库配置 #################

#test
test.jasypt=ENC(H6K3iabZRY+XfpmKeXH35gdihi59Nqv/)
test.config.center=configCenterData