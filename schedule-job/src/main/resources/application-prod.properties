# web port
server.port=6213

### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
xxl.job.executor.adminAddresses=http://127.0.0.1:6012/admin-job

### xxl-job executor address
xxl.job.executor.appName=job-executor-2
xxl.job.executor.ip=
xxl.job.executor.port=16023

### xxl-job, access token
xxl.job.executor.accessToken=

### xxl-job log path
xxl.job.executor.logPath=/home/deploy/joblog/
### xxl-job log retention days
xxl.job.executor.logRetentionDays=-1

sms.driver=yunpian
sms.gateway=https://sms.yunpian.com/v2/sms/batch_send.json
sms.username=20b2c951cca70b0e4e7ff72ccf868f04
sms.password=
sms.sign=djw


#kafka
spring.kafka.bootstrap-servers=172.31.50.56:9092
spring.kafka.consumer.group-id=default-group
spring.kafka.template.default-topic=test
spring.kafka.listener.concurrency=3
spring.kafka.producer.batch-size=1000

#eureka
eureka.client.serviceUrl.defaultZone=http://172.31.48.134:7000/eureka/,http://172.31.48.120:7000/eureka/
eureka.instance.prefer-ip-address=true
spring.session.store-type=none

spring.data.mongodb.uri=mongodb://172.31.50.67:27017/galaxy


#redis
spring.redis.host=172.31.50.183
spring.redis.password=Credit2016Admin
spring.redis.port=6379
spring.redis.database=0
#################redis\u7EBF\u7A0B\u6C60\u8BBE\u7F6E#################
# \u8FDE\u63A5\u8D85\u65F6\u65F6\u95F4 \u5355\u4F4D ms\uFF08\u6BEB\u79D2\uFF09
spring.redis.timeout=1000000
#\u6700\u5927\u94FE\u63A5\u6570
spring.redis.maxTotal=50
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u9ED8\u8BA4\u503C\u4E5F\u662F8\u3002
spring.redis.pool.max-idle=8
#\u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u9ED8\u8BA4\u503C\u4E5F\u662F0\u3002
spring.redis.pool.min-idle=10
# \u5982\u679C\u8D4B\u503C\u4E3A-1\uFF0C\u5219\u8868\u793A\u4E0D\u9650\u5236\uFF1B\u5982\u679Cpool\u5DF2\u7ECF\u5206\u914D\u4E86maxActive\u4E2Ajedis\u5B9E\u4F8B\uFF0C\u5219\u6B64\u65F6pool\u7684\u72B6\u6001\u4E3Aexhausted(\u8017\u5C3D)\u3002
spring.redis.pool.max-active=50
# \u7B49\u5F85\u53EF\u7528\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u95F4\uFF0C\u5355\u4F4D\u6BEB\u79D2\uFF0C\u9ED8\u8BA4\u503C\u4E3A-1\uFF0C\u8868\u793A\u6C38\u4E0D\u8D85\u65F6\u3002\u5982\u679C\u8D85\u8FC7\u7B49\u5F85\u65F6\u95F4\uFF0C\u5219\u76F4\u63A5\u629B\u51FAJedisConnectionException
spring.redis.pool.max-wait=1000

#\u6279\u91CF\u5904\u7406\u89E3\u9501\u7684\u6570\u91CF
lock.unlockNum=1000

###mybatis\u8BFB\u5199\u5206\u79BB\u914D\u7F6E
#mybatis.mapperScanPackage=com.spark.bitrade.mapper.dao
mybatis.mapperLocations=classpath:/com/spark/bitrade/mapper/dao/*.xml
mybatis.typeAliasesPackage=com.spark.bitrade.mapper.dao
mybatis.configLocation=classpath:/mybatis-config.xml
#mybatis.datasource.type=com.alibaba.druid.pool.DruidDataSource

####### \u5206\u5e93\u914d\u7f6e #################
#\u6570\u636e\u6e90\u914d\u7f6e
sharding.jdbc.datasource.names=master0,slave0

#����
#sharding.jdbc.datasource.master0.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.master0.url=jdbc:mysql://silktrader.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
sharding.jdbc.datasource.master0.username=dk-lock-api
sharding.jdbc.datasource.master0.password=ENC(47//QHJjfmb309Ym33FgDbJoVLv5Zxdc76W8Pduw3lQ=)
sharding.jdbc.datasource.master0.initialSize=1
sharding.jdbc.datasource.master0.minIdle=1
sharding.jdbc.datasource.master0.maxActive=10
sharding.jdbc.datasource.master0.maxWait=60000
sharding.jdbc.datasource.master0.timeBetweenEvictionRunsMillis=60000
sharding.jdbc.datasource.master0.minEvictableIdleTimeMillis=300000
sharding.jdbc.datasource.master0.validationQuery=select 'x'
sharding.jdbc.datasource.master0.testWhileIdle=true
sharding.jdbc.datasource.master0.testOnBorrow=false
sharding.jdbc.datasource.master0.testOnReturn=false
sharding.jdbc.datasource.master0.poolPreparedStatements=true
sharding.jdbc.datasource.master0.maxPoolPreparedStatementPerConnectionSize=50
sharding.jdbc.datasource.master0.removeAbandoned=true
sharding.jdbc.datasource.master0.filters=stat,wall,slf4j

#�ӿ�
sharding.jdbc.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
sharding.jdbc.datasource.slave0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.slave0.url=jdbc:mysql://silktrader-readonly.cozqhg64ejiq.ap-northeast-1.rds.amazonaws.com:3306/silktrader?characterEncoding=utf-8
sharding.jdbc.datasource.slave0.username=dk-lock-api
sharding.jdbc.datasource.slave0.password=ENC(47//QHJjfmb309Ym33FgDbJoVLv5Zxdc76W8Pduw3lQ=)
sharding.jdbc.datasource.slave0.initialSize=1
sharding.jdbc.datasource.slave0.minIdle=1
sharding.jdbc.datasource.slave0.maxActive=10
sharding.jdbc.datasource.slave0.maxWait=60000
sharding.jdbc.datasource.slave0.timeBetweenEvictionRunsMillis=60000
sharding.jdbc.datasource.slave0.minEvictableIdleTimeMillis=300000
sharding.jdbc.datasource.slave0.validationQuery=select 'x'
sharding.jdbc.datasource.slave0.testWhileIdle=true
sharding.jdbc.datasource.slave0.testOnBorrow=false
sharding.jdbc.datasource.slave0.testOnReturn=false
sharding.jdbc.datasource.slave0.poolPreparedStatements=true
sharding.jdbc.datasource.slave0.maxPoolPreparedStatementPerConnectionSize=50
sharding.jdbc.datasource.slave0.removeAbandoned=true
sharding.jdbc.datasource.slave0.filters=stat,wall,slf4j

#��д����
sharding.jdbc.config.sharding.master-slave-rules.ds0.load-balance-algorithm-type=round_robin
sharding.jdbc.config.sharding.master-slave-rules.ds0.master-data-source-name=master0
sharding.jdbc.config.sharding.master-slave-rules.ds0.slave-data-source-names=slave0

#���ݿ�Ĭ�Ϸֿ����ù���
sharding.jdbc.config.sharding.default-data-source-name=master0
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=member_id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=master0

#�Ƿ�������ʱ���ֱ�Ԫ����һ���ԣ�Ĭ��ֵ: false
sharding.jdbc.config.props.check.table.metadata.enabled=true
sharding.jdbc.config.sharding.props.sql.show=true

##���Ƭ����
#Ǯ���ʽ�䶯��ˮ��¼
sharding.jdbc.config.sharding.tables.wallet_change_record.table-strategy.inline.sharding-column=member_id
sharding.jdbc.config.sharding.tables.wallet_change_record.table-strategy.inline.algorithm-expression=wallet_change_record_$->{member_id % 2}
####### �ֿ����� #################

#test
test.jasypt=ENC(H6K3iabZRY+XfpmKeXH35gdihi59Nqv/)
test.config.center=configCenterData

#tx-lcn\u914d\u7f6e
#logging.level.com.codingapi=debug
tx-lcn.springcloud.loadbalance.enabled=true
#tx-lcn.client.manager-address=172.16.0.85:8070
tx-lcn.client.manager-address=172.31.48.120:8070,172.31.48.110:8070