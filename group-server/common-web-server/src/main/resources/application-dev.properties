#server.port=6610
#server.context-path=/cws
#spring.application.name=cws-server
#
##配置prod环境的公钥(签名、加密公钥)
#prod.key.dsc.public=
#
#################
##kafka
### 指定kafka 代理地址，可以多个
##spring.kafka.bootstrap-servers=127.0.0.1:9092
### 指定默认消费者group id
##spring.kafka.consumer.group-id=default-group
### 指定默认topic id
##spring.kafka.template.default-topic= test
### 指定listener 容器中的线程数，用于提高并发量
##spring.kafka.listener.concurrency= 1
### 每次批量发送消息的数量
##spring.kafka.producer.batch-size= 1000
##spring.kafka.consumer.enable-auto-commit=false
#
#
##Ribbon配置
## 关闭Ribbon的重试机制
#ribbon.MaxAutoRetriesNextServer=0
#ribbon.ReadTimeout=5000
#ribbon.ConnectTimeout=5000
#
#
##mybatis-plus配置枚举
#mybatis-plus.type-enums-package=com.spark.bitrade.constant
#mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumOrdinalTypeHandler
#
######## 分库配置 #################
##数据源配置
#sharding.jdbc.datasource.names=master0,slave0
#
##主库
##sharding.jdbc.datasource.master0.type=org.apache.commons.dbcp.BasicDataSource
#sharding.jdbc.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.master0.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.master0.url=jdbc:mysql://127.0.0.1:3306/otc_sync?characterEncoding=utf-8
#sharding.jdbc.datasource.master0.username=bjxy_db
#sharding.jdbc.datasource.master0.password=Credit2016Admin
#sharding.jdbc.datasource.master0.initialSize=1
#sharding.jdbc.datasource.master0.minIdle=1
#sharding.jdbc.datasource.master0.maxActive=10
#sharding.jdbc.datasource.master0.maxWait=60000
#sharding.jdbc.datasource.master0.timeBetweenEvictionRunsMillis=60000
#sharding.jdbc.datasource.master0.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.master0.validationQuery=select 'x'
#sharding.jdbc.datasource.master0.testWhileIdle=true
#sharding.jdbc.datasource.master0.testOnBorrow=false
#sharding.jdbc.datasource.master0.testOnReturn=false
#sharding.jdbc.datasource.master0.poolPreparedStatements=true
#sharding.jdbc.datasource.master0.maxPoolPreparedStatementPerConnectionSize=50
#sharding.jdbc.datasource.master0.removeAbandoned=true
#sharding.jdbc.datasource.master0.filters=stat,wall,slf4j
#
##从库
#sharding.jdbc.datasource.slave0.type=com.alibaba.druid.pool.DruidDataSource
#sharding.jdbc.datasource.slave0.driver-class-name=com.mysql.jdbc.Driver
#sharding.jdbc.datasource.slave0.url=jdbc:mysql://127.0.0.1:3306/otc_sync?characterEncoding=utf-8
#sharding.jdbc.datasource.slave0.username=bjxy_db
#sharding.jdbc.datasource.slave0.password=Credit2016Admin
#sharding.jdbc.datasource.slave0.initialSize=1
#sharding.jdbc.datasource.slave0.minIdle=1
#sharding.jdbc.datasource.slave0.maxActive=10
#sharding.jdbc.datasource.slave0.maxWait=60000
#sharding.jdbc.datasource.slave0.timeBetweenEvictionRunsMillis=60000
#sharding.jdbc.datasource.slave0.minEvictableIdleTimeMillis=300000
#sharding.jdbc.datasource.slave0.validationQuery=select 'x'
#sharding.jdbc.datasource.slave0.testWhileIdle=true
#sharding.jdbc.datasource.slave0.testOnBorrow=false
#sharding.jdbc.datasource.slave0.testOnReturn=false
#sharding.jdbc.datasource.slave0.poolPreparedStatements=true
#sharding.jdbc.datasource.slave0.maxPoolPreparedStatementPerConnectionSize=50
#sharding.jdbc.datasource.slave0.removeAbandoned=true
#sharding.jdbc.datasource.slave0.filters=stat,wall,slf4j
#
##读写分离
#sharding.jdbc.config.sharding.master-slave-rules.ds0.load-balance-algorithm-type=round_robin
#sharding.jdbc.config.sharding.master-slave-rules.ds0.master-data-source-name=master0
#sharding.jdbc.config.sharding.master-slave-rules.ds0.slave-data-source-names=slave0
#
##数据库默认分库配置规则
#sharding.jdbc.config.sharding.default-data-source-name=master0
##sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=member_id
##sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=master0
#
##是否在启动时检查分表元数据一致性，默认值: false
#sharding.jdbc.config.props.check.table.metadata.enabled=true
##sharding.jdbc.config.props.sql.show=true
#sharding.jdbc.config.sharding.props.sql.show=false
#
###表分片配置
##钱包资金变动流水记录
#sharding.jdbc.config.sharding.tables.wallet_change_record.table-strategy.inline.sharding-column=member_id
#sharding.jdbc.config.sharding.tables.wallet_change_record.table-strategy.inline.algorithm-expression=wallet_change_record_$->{member_id % 2}
#
##钱包可用余额资金变动流水记录（注：需要管理端改造）
##sharding.jdbc.config.sharding.tables.member_transaction.table-strategy.inline.sharding-column=member_id
##sharding.jdbc.config.sharding.tables.member_transaction.table-strategy.inline.algorithm-expression=member_transaction_$->{member_id % 2}
#
######## 分库配置 #################
#
#
#
